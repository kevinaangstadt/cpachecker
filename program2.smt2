(declare-fun |kernel::diff@10| () (_ BitVec 32))
(declare-fun |kernel::tmp@9| () String)
(declare-fun |kernel::i@9| () (_ BitVec 32))
(declare-fun |kernel::i@10| () (_ BitVec 32))
(declare-fun |kernel::diff@9| () (_ BitVec 32))
(declare-fun |kernel::comp@2| () String)
(declare-fun |kernel::offset@9| () (_ BitVec 32))
(declare-fun |kernel::offset@10| () (_ BitVec 32))
(declare-fun |kernel::input@2| () String)
(declare-fun |kernel::tmp@8| () String)
(declare-fun |kernel::i@8| () (_ BitVec 32))
(declare-fun |kernel::diff@8| () (_ BitVec 32))
(declare-fun |kernel::offset@8| () (_ BitVec 32))
(declare-fun |kernel::tmp@7| () String)
(declare-fun |kernel::i@7| () (_ BitVec 32))
(declare-fun |kernel::diff@7| () (_ BitVec 32))
(declare-fun |kernel::offset@7| () (_ BitVec 32))
(declare-fun |kernel::tmp@6| () String)
(declare-fun |kernel::i@6| () (_ BitVec 32))
(declare-fun |kernel::diff@6| () (_ BitVec 32))
(declare-fun |kernel::offset@6| () (_ BitVec 32))
(declare-fun |kernel::tmp@5| () String)
(declare-fun |kernel::i@5| () (_ BitVec 32))
(declare-fun |kernel::diff@5| () (_ BitVec 32))
(declare-fun |kernel::offset@5| () (_ BitVec 32))
(declare-fun |kernel::tmp@4| () String)
(declare-fun |kernel::i@4| () (_ BitVec 32))
(declare-fun |kernel::diff@4| () (_ BitVec 32))
(declare-fun |kernel::offset@4| () (_ BitVec 32))
(declare-fun |kernel::tmp@3| () String)
(declare-fun |kernel::i@3| () (_ BitVec 32))
(declare-fun |kernel::diff@3| () (_ BitVec 32))
(declare-fun |kernel::offset@3| () (_ BitVec 32))
(declare-fun |kernel::__CPAchecker_TMP_1@3| () (_ BitVec 32))
(declare-fun |kernel::__CPAchecker_TMP_0@3| () (_ BitVec 32))
(assert (let ((a!1 (re.++ (re.+ (re.union (str.to.re "a") (str.to.re "b")))
(str.to.re "\x00")))
(a!3 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@3|))
|kernel::tmp@3|)))
(a!7 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@4|))
|kernel::tmp@4|)))
(a!11 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@5|))
|kernel::tmp@5|)))
(a!15 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@6|))
|kernel::tmp@6|)))
(a!19 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@7|))
|kernel::tmp@7|)))
(a!23 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@8|))
|kernel::tmp@8|)))
(a!27 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@9|))
|kernel::tmp@9|))))
(let ((a!2 (and (= |kernel::__CPAchecker_TMP_0@3|
(ite (str.in.re |kernel::input@2| a!1) #x00000001 #x00000000))
(not (= |kernel::__CPAchecker_TMP_0@3| #x00000000))
(= |kernel::__CPAchecker_TMP_1@3|
((_ int2bv 32) (str.len |kernel::input@2|)))
(not (not (= |kernel::__CPAchecker_TMP_1@3| #x00000007)))
(= |kernel::i@3| #x00000000)
(= |kernel::offset@3| #x00000000)
(= (str.at |kernel::comp@2| (bv2int #x00000000)) "a")
(= (str.at |kernel::comp@2| (bv2int #x00000001)) "b")
(= (str.at |kernel::comp@2| (bv2int #x00000002)) "a")
(= (str.at |kernel::comp@2| (bv2int #x00000003)) "b")
(= (str.at |kernel::comp@2| (bv2int #x00000004)) "a")
(= (str.at |kernel::comp@2| (bv2int #x00000005)) "b")
(= (str.at |kernel::comp@2| (bv2int #x00000006)) "\x00")
(= |kernel::diff@3| #x00000000)
(= |kernel::tmp@3|
(str.at |kernel::input@2| (bv2int |kernel::offset@3|)))
(= |kernel::offset@4| (bvadd |kernel::offset@3| #x00000001)))))
(let ((a!4 (or (and a!2
a!3
(= |kernel::diff@4| (bvadd |kernel::diff@3| #x00000001)))
(and a!2 (not a!3) (= |kernel::diff@4| |kernel::diff@3|)))))
(let ((a!5 (and (and a!4 (= |kernel::i@4| (bvadd |kernel::i@3| #x00000001)))
(not (not (= |kernel::tmp@3| "\x00")))
(bvsle |kernel::diff@4| #x00000002)))
(a!6 (and (and a!4 (= |kernel::i@4| (bvadd |kernel::i@3| #x00000001)))
(not (= |kernel::tmp@3| "\x00"))
(bvslt |kernel::i@4| #x00000007)
(= |kernel::tmp@4|
(str.at |kernel::input@2| (bv2int |kernel::offset@4|)))
(= |kernel::offset@5| (bvadd |kernel::offset@4| #x00000001)))))
(let ((a!8 (or (and a!6
a!7
(= |kernel::diff@5| (bvadd |kernel::diff@4| #x00000001)))
(and a!6 (not a!7) (= |kernel::diff@5| |kernel::diff@4|)))))
(let ((a!9 (and (and a!8 (= |kernel::i@5| (bvadd |kernel::i@4| #x00000001)))
(not (not (= |kernel::tmp@4| "\x00")))
(bvsle |kernel::diff@5| #x00000002)))
(a!10 (and (and a!8 (= |kernel::i@5| (bvadd |kernel::i@4| #x00000001)))
(not (= |kernel::tmp@4| "\x00"))
(bvslt |kernel::i@5| #x00000007)
(= |kernel::tmp@5|
(str.at |kernel::input@2| (bv2int |kernel::offset@5|)))
(= |kernel::offset@6| (bvadd |kernel::offset@5| #x00000001)))))
(let ((a!12 (or (and a!10
a!11
(= |kernel::diff@6| (bvadd |kernel::diff@5| #x00000001)))
(and a!10 (not a!11) (= |kernel::diff@6| |kernel::diff@5|)))))
(let ((a!13 (and (and a!12 (= |kernel::i@6| (bvadd |kernel::i@5| #x00000001)))
(not (not (= |kernel::tmp@5| "\x00")))
(bvsle |kernel::diff@6| #x00000002)))
(a!14 (and (and a!12 (= |kernel::i@6| (bvadd |kernel::i@5| #x00000001)))
(not (= |kernel::tmp@5| "\x00"))
(bvslt |kernel::i@6| #x00000007)
(= |kernel::tmp@6|
(str.at |kernel::input@2| (bv2int |kernel::offset@6|)))
(= |kernel::offset@7| (bvadd |kernel::offset@6| #x00000001)))))
(let ((a!16 (or (and a!14
a!15
(= |kernel::diff@7| (bvadd |kernel::diff@6| #x00000001)))
(and a!14 (not a!15) (= |kernel::diff@7| |kernel::diff@6|)))))
(let ((a!17 (and (and a!16 (= |kernel::i@7| (bvadd |kernel::i@6| #x00000001)))
(not (not (= |kernel::tmp@6| "\x00")))
(bvsle |kernel::diff@7| #x00000002)))
(a!18 (and (and a!16 (= |kernel::i@7| (bvadd |kernel::i@6| #x00000001)))
(not (= |kernel::tmp@6| "\x00"))
(bvslt |kernel::i@7| #x00000007)
(= |kernel::tmp@7|
(str.at |kernel::input@2| (bv2int |kernel::offset@7|)))
(= |kernel::offset@8| (bvadd |kernel::offset@7| #x00000001)))))
(let ((a!20 (or (and a!18
a!19
(= |kernel::diff@8| (bvadd |kernel::diff@7| #x00000001)))
(and a!18 (not a!19) (= |kernel::diff@8| |kernel::diff@7|)))))
(let ((a!21 (and (and a!20 (= |kernel::i@8| (bvadd |kernel::i@7| #x00000001)))
(not (not (= |kernel::tmp@7| "\x00")))
(bvsle |kernel::diff@8| #x00000002)))
(a!22 (and (and a!20 (= |kernel::i@8| (bvadd |kernel::i@7| #x00000001)))
(not (= |kernel::tmp@7| "\x00"))
(bvslt |kernel::i@8| #x00000007)
(= |kernel::tmp@8|
(str.at |kernel::input@2| (bv2int |kernel::offset@8|)))
(= |kernel::offset@9| (bvadd |kernel::offset@8| #x00000001)))))
(let ((a!24 (or (and a!22
a!23
(= |kernel::diff@9| (bvadd |kernel::diff@8| #x00000001)))
(and a!22 (not a!23) (= |kernel::diff@9| |kernel::diff@8|)))))
(let ((a!25 (and (and a!24 (= |kernel::i@9| (bvadd |kernel::i@8| #x00000001)))
(not (not (= |kernel::tmp@8| "\x00")))
(bvsle |kernel::diff@9| #x00000002)))
(a!26 (and (and a!24 (= |kernel::i@9| (bvadd |kernel::i@8| #x00000001)))
(not (= |kernel::tmp@8| "\x00"))
(bvslt |kernel::i@9| #x00000007)
(= |kernel::tmp@9|
(str.at |kernel::input@2| (bv2int |kernel::offset@9|)))
(= |kernel::offset@10| (bvadd |kernel::offset@9| #x00000001)))))
(let ((a!28 (or (and a!26
a!27
(= |kernel::diff@10| (bvadd |kernel::diff@9| #x00000001)))
(and a!26 (not a!27) (= |kernel::diff@10| |kernel::diff@9|)))))
(let ((a!29 (and (and a!28 (= |kernel::i@10| (bvadd |kernel::i@9| #x00000001)))
(not (= |kernel::tmp@9| "\x00"))
(not (bvslt |kernel::i@10| #x00000007))))
(a!30 (and (and a!28 (= |kernel::i@10| (bvadd |kernel::i@9| #x00000001)))
(not (not (= |kernel::tmp@9| "\x00"))))))
(let ((a!31 (not (or a!5
a!9
a!13
a!17
a!21
a!25
(and (or a!29 a!30) (bvsle |kernel::diff@10| #x00000002))))))
(not a!31)))))))))))))))))))


(check-sat)
(get-model)
