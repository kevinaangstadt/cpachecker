(set-option :smt.string_solver z3str3)

(declare-fun |kernel::__CPAchecker_TMP_1@3| () (_ BitVec 32))
(declare-fun |kernel::input@2| () String)
(declare-fun |kernel::diff@5| () (_ BitVec 32))
(declare-fun |kernel::tmp@3| () String)
(declare-fun |kernel::i@4| () (_ BitVec 32))
(declare-fun |kernel::diff@4| () (_ BitVec 32))
(declare-fun |kernel::i@3| () (_ BitVec 32))
(declare-fun |kernel::diff@3| () (_ BitVec 32))
(declare-fun |kernel::comp@2| () String)
(declare-fun |kernel::offset@3| () (_ BitVec 32))
(declare-fun |kernel::offset@4| () (_ BitVec 32))
(declare-fun |kernel::__CPAchecker_TMP_0@3| () (_ BitVec 32))
(assert (let ((a!1 (re.++ (re.+ (re.union (str.to.re "a") (str.to.re "b")))
(str.to.re "\x00")))
(a!3 (not (= (str.at |kernel::comp@2| (bv2int |kernel::i@3|))
|kernel::tmp@3|)))
(a!5 (re.++ (str.to.re "a")
(re.union (str.to.re "")
(re.union (str.to.re "b") (str.to.re "a"))))))
(let ((a!2 (and (= |kernel::__CPAchecker_TMP_0@3|
(ite (str.in.re |kernel::input@2| a!1) #x00000001 #x00000000))
(not (= |kernel::__CPAchecker_TMP_0@3| #x00000000))
(= |kernel::i@3| #x00000000)
(= |kernel::offset@3| #x00000000)
(= (str.at |kernel::comp@2| (bv2int #x00000000)) "a")
(= (str.at |kernel::comp@2| (bv2int #x00000001)) "b")
(= (str.at |kernel::comp@2| (bv2int #x00000002)) "a")
(= (str.at |kernel::comp@2| (bv2int #x00000003)) "b")
(= (str.at |kernel::comp@2| (bv2int #x00000004)) "a")
(= (str.at |kernel::comp@2| (bv2int #x00000005)) "b")
(= (str.at |kernel::comp@2| (bv2int #x00000006)) "\x00")
(= |kernel::diff@3| #x00000000)
(= |kernel::tmp@3|
(str.at |kernel::input@2| (bv2int |kernel::offset@3|)))
(= |kernel::offset@4| (bvadd |kernel::offset@3| #x00000001))))
(a!6 (re.++ (str.to.re "b")
(re.++ (str.to.re "a") (re.++ (str.to.re "b") a!5)))))
(let ((a!4 (or (and a!2
a!3
(= |kernel::diff@4| (bvadd |kernel::diff@3| #x00000001)))
(and a!2 (not a!3) (= |kernel::diff@4| |kernel::diff@3|))))
(a!7 (str.in.re |kernel::input@2|
(re.++ (re.++ (str.to.re "a") a!6)
(re.+ (str.to.re "\x00"))))))
(let ((a!8 (and a!4
(= |kernel::i@4| (bvadd |kernel::i@3| #x00000001))
(not (not (= |kernel::tmp@3| "\x00")))
(bvslt |kernel::i@4| #x00000007)
(= |kernel::diff@5|
(bvadd |kernel::diff@4| (bvsub #x00000007 |kernel::i@4|)))
(not (not (= |kernel::tmp@3| "\x00")))
(bvsle |kernel::diff@5| #x00000002)
(= |kernel::__CPAchecker_TMP_1@3|
(ite a!7 #x00000001 #x00000000))
(= #x00000000 |kernel::__CPAchecker_TMP_1@3|))))
(not (not a!8)))))))

(check-sat)
(get-model)
